Resources:
  jsarcVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  publicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref jsarcVPC
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: true

  publicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref jsarcVPC
      AvailabilityZone:
        Fn::Select:
         - 1
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
         - 0
         - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref jsarcVPC
      CidrBlock: 10.0.2.0/24
      MapPublicIpOnLaunch: false

  internetGateway:
    Type: AWS::EC2::InternetGateway

  attachInternetGatewayToVpc:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref jsarcVPC
      InternetGatewayId: !Ref internetGateway

  publicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref jsarcVPC

  publicSubnetRoute:
    Type: AWS::EC2::Route
    DependsOn: attachInternetGatewayToVpc
    Properties:
      RouteTableId: !Ref publicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref internetGateway

  publicSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet1
      RouteTableId: !Ref publicSubnetRouteTable

  publicSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicSubnet2
      RouteTableId: !Ref publicSubnetRouteTable

  natGatewayEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  natGatewayOne:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt natGatewayEIP.AllocationId
      SubnetId: !Ref publicSubnet1

  privateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref jsarcVPC

  privateSubnetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref privateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref natGatewayOne

  privateSubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref privateSubnetRouteTable
      SubnetId: !Ref privateSubnet

Outputs:
  exportVPC:
    Description: Export VPC value to be used in the ECS stack
    Value: !Ref jsarcVPC
    Export:
      Name: vpc

  exportPublicSubnet1:
    Description: Export the public subnet 1 value to be used for the alb.
    Value: !Ref publicSubnet1
    Export:
      Name: publicSubnet1

  exportPublicSubnet2:
    Description: Export the public subnet 1 value to be used for the alb
    Value: !Ref publicSubnet2
    Export:
      Name: publicSubnet2

  exportPrivateSubnet:
    Description: Export the private subnet value to be used in the ECS stack
    Value: !Ref privateSubnet
    Export:
      Name: privateSubnet
