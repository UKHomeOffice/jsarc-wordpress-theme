---
kind: pipeline
name: default

platform:
  os: linux
  arch: amd64

steps:
- name: build-image
  pull: if-not-exists
  image: docker:18.03
  commands:
  - docker build -t jsarc-wordpress .
  environment:
    DOCKER_HOST: tcp://172.17.0.1:2375
  when:
    branch:
    - master
    event:
    - push

- name: push_to_quay
  pull: if-not-exists
  image: docker:18.03
  commands:
  - docker login -u="ukhomeofficedigital+jsarc" -p=$${DOCKER_PASSWORD} quay.io
  - docker tag jsarc-wordpress quay.io/ukhomeofficedigital/osct-jsarc:$${DRONE_COMMIT_SHA}
  - docker push quay.io/ukhomeofficedigital/osct-jsarc:$${DRONE_COMMIT_SHA}
  environment:
    DOCKER_HOST: tcp://172.17.0.1:2375
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    branch:
    - master
    event:
    - push

- name: deploy_to_kube
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd:v1.16.0
  commands:
  - apk update
  - apk add curl
  - chmod +x bin/deploy.sh
  - bin/deploy.sh
  environment:
    DRONE_DEPLOY_TO_ACP: acp-notprod
    IMAGE_URL: quay.io/ukhomeofficedigital/osct-jsarc:${DRONE_COMMIT_SHA}
    KUBE_TOKEN_ACP_NOTPROD:
      from_secret: kube_token_acp_notprod
  when:
    branch:
    - master
    event:
    - push

- name: deploy_to_prod
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/kd:v1.16.0
  commands:
  - apk update
  - apk add curl
  - chmod +x bin/deploy.sh
  - bin/deploy.sh
  environment:
    DRONE_DEPLOY_TO_ACP: acp-prod
    IMAGE_URL: quay.io/ukhomeofficedigital/osct-jsarc:${DRONE_COMMIT_SHA}
    KUBE_TOKEN_ACP_PROD:
      from_secret: kube_token_acp_prod
  when:
    event:
    - deployment

...
